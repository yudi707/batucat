"use strict";window.ThreeBSP=function(){var t;return t=function(e){var i,r,o,s,n,l,h,c=[];if(e instanceof THREE.Geometry)this.matrix=new THREE.Matrix4;else{if(!(e instanceof THREE.Mesh)){if(e instanceof t.Node)return this.tree=e,this.matrix=new THREE.Matrix4,this;throw"ThreeBSP: Given geometry is unsupported"}e.updateMatrix(),this.matrix=e.matrix.clone(),e=e.geometry}for(i=0,r=e.faces.length;i<r;i++)o=e.faces[i],n=e.faceVertexUvs[0][i],h=new t.Polygon,o instanceof THREE.Face3?(s=e.vertices[o.a],l=n?new THREE.Vector2(n[0].x,n[0].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[0],l)).applyMatrix4(this.matrix),h.vertices.push(s),s=e.vertices[o.b],l=n?new THREE.Vector2(n[1].x,n[1].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[1],l)).applyMatrix4(this.matrix),h.vertices.push(s),s=e.vertices[o.c],l=n?new THREE.Vector2(n[2].x,n[2].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[2],l)).applyMatrix4(this.matrix),h.vertices.push(s)):(THREE.Face4,s=e.vertices[o.a],l=n?new THREE.Vector2(n[0].x,n[0].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[0],l)).applyMatrix4(this.matrix),h.vertices.push(s),s=e.vertices[o.b],l=n?new THREE.Vector2(n[1].x,n[1].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[1],l)).applyMatrix4(this.matrix),h.vertices.push(s),s=e.vertices[o.c],l=n?new THREE.Vector2(n[2].x,n[2].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[2],l)).applyMatrix4(this.matrix),h.vertices.push(s),s=e.vertices[o.d],l=n?new THREE.Vector2(n[3].x,n[3].y):null,(s=new t.Vertex(s.x,s.y,s.z,o.vertexNormals[3],l)).applyMatrix4(this.matrix),h.vertices.push(s)),h.calculateProperties(),c.push(h);this.tree=new t.Node(c)},t.prototype.subtract=function(e){var i=this.tree.clone(),r=e.tree.clone();return i.invert(),i.clipTo(r),r.clipTo(i),r.invert(),r.clipTo(i),r.invert(),i.build(r.allPolygons()),i.invert(),i=new t(i),i.matrix=this.matrix,i},t.prototype.union=function(e){var i=this.tree.clone(),r=e.tree.clone();return i.clipTo(r),r.clipTo(i),r.invert(),r.clipTo(i),r.invert(),i.build(r.allPolygons()),i=new t(i),i.matrix=this.matrix,i},t.prototype.intersect=function(e){var i=this.tree.clone(),r=e.tree.clone();return i.invert(),r.clipTo(i),r.invert(),i.clipTo(r),r.clipTo(i),i.build(r.allPolygons()),i.invert(),i=new t(i),i.matrix=this.matrix,i},t.prototype.toGeometry=function(){var t,e,i,r,o,s,n,l,h,c,a=(new THREE.Matrix4).getInverse(this.matrix),p=new THREE.Geometry,y=this.tree.allPolygons(),u=y.length,x={};for(t=0;t<u;t++)for(r=(i=y[t]).vertices.length,e=2;e<r;e++)c=[],l=i.vertices[0],c.push(new THREE.Vector2(l.uv.x,l.uv.y)),(l=new THREE.Vector3(l.x,l.y,l.z)).applyMatrix4(a),void 0!==x[l.x+","+l.y+","+l.z]?o=x[l.x+","+l.y+","+l.z]:(p.vertices.push(l),o=x[l.x+","+l.y+","+l.z]=p.vertices.length-1),l=i.vertices[e-1],c.push(new THREE.Vector2(l.uv.x,l.uv.y)),(l=new THREE.Vector3(l.x,l.y,l.z)).applyMatrix4(a),void 0!==x[l.x+","+l.y+","+l.z]?s=x[l.x+","+l.y+","+l.z]:(p.vertices.push(l),s=x[l.x+","+l.y+","+l.z]=p.vertices.length-1),l=i.vertices[e],c.push(new THREE.Vector2(l.uv.x,l.uv.y)),(l=new THREE.Vector3(l.x,l.y,l.z)).applyMatrix4(a),void 0!==x[l.x+","+l.y+","+l.z]?n=x[l.x+","+l.y+","+l.z]:(p.vertices.push(l),n=x[l.x+","+l.y+","+l.z]=p.vertices.length-1),h=new THREE.Face3(o,s,n,new THREE.Vector3(i.normal.x,i.normal.y,i.normal.z)),p.faces.push(h),p.faceVertexUvs[0].push(c);return p},t.prototype.toMesh=function(t){var e=this.toGeometry(),i=new THREE.Mesh(e,t);return i.position.setFromMatrixPosition(this.matrix),i.rotation.setFromRotationMatrix(this.matrix),i},t.Polygon=function(t,e,i){t instanceof Array||(t=[]),this.vertices=t,t.length>0?this.calculateProperties():this.normal=this.w=void 0},t.Polygon.prototype.calculateProperties=function(){var t=this.vertices[0],e=this.vertices[1],i=this.vertices[2];return this.normal=e.clone().subtract(t).cross(i.clone().subtract(t)).normalize(),this.w=this.normal.clone().dot(t),this},t.Polygon.prototype.clone=function(){var e,i,r=new t.Polygon;for(e=0,i=this.vertices.length;e<i;e++)r.vertices.push(this.vertices[e].clone());return r.calculateProperties(),r},t.Polygon.prototype.flip=function(){var t,e=[];for(this.normal.multiplyScalar(-1),this.w*=-1,t=this.vertices.length-1;t>=0;t--)e.push(this.vertices[t]);return this.vertices=e,this},t.Polygon.prototype.classifyVertex=function(t){var e=this.normal.dot(t)-this.w;return e<-1e-5?2:e>1e-5?1:0},t.Polygon.prototype.classifySide=function(t){var e,i,r,o=0,s=0,n=t.vertices.length;for(e=0;e<n;e++)i=t.vertices[e],1===(r=this.classifyVertex(i))?o++:2===r&&s++;return o>0&&0===s?1:0===o&&s>0?2:0===o&&0===s?0:3},t.Polygon.prototype.splitPolygon=function(e,i,r,o,s){var n=this.classifySide(e);if(0===n)(this.normal.dot(e.normal)>0?i:r).push(e);else if(1===n)o.push(e);else if(2===n)s.push(e);else{var l,h,c,a,p,y,u,x,v,f=[],d=[];for(h=0,l=e.vertices.length;h<l;h++)c=(h+1)%l,y=e.vertices[h],u=e.vertices[c],a=this.classifyVertex(y),p=this.classifyVertex(u),2!=a&&f.push(y),1!=a&&d.push(y),3==(a|p)&&(x=(this.w-this.normal.dot(y))/this.normal.dot(u.clone().subtract(y)),v=y.interpolate(u,x),f.push(v),d.push(v));f.length>=3&&o.push(new t.Polygon(f).calculateProperties()),d.length>=3&&s.push(new t.Polygon(d).calculateProperties())}},t.Vertex=function(t,e,i,r,o){this.x=t,this.y=e,this.z=i,this.normal=r||new THREE.Vector3,this.uv=o||new THREE.Vector2},t.Vertex.prototype.clone=function(){return new t.Vertex(this.x,this.y,this.z,this.normal.clone(),this.uv.clone())},t.Vertex.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this},t.Vertex.prototype.subtract=function(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this},t.Vertex.prototype.multiplyScalar=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.Vertex.prototype.cross=function(t){var e=this.x,i=this.y,r=this.z;return this.x=i*t.z-r*t.y,this.y=r*t.x-e*t.z,this.z=e*t.y-i*t.x,this},t.Vertex.prototype.normalize=function(){var t=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);return this.x/=t,this.y/=t,this.z/=t,this},t.Vertex.prototype.dot=function(t){return this.x*t.x+this.y*t.y+this.z*t.z},t.Vertex.prototype.lerp=function(t,e){return this.add(t.clone().subtract(this).multiplyScalar(e)),this.normal.add(t.normal.clone().sub(this.normal).multiplyScalar(e)),this.uv.add(t.uv.clone().sub(this.uv).multiplyScalar(e)),this},t.Vertex.prototype.interpolate=function(t,e){return this.clone().lerp(t,e)},t.Vertex.prototype.applyMatrix4=function(t){var e=this.x,i=this.y,r=this.z,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*r+o[12],this.y=o[1]*e+o[5]*i+o[9]*r+o[13],this.z=o[2]*e+o[6]*i+o[10]*r+o[14],this},t.Node=function(e){var i,r,o=[],s=[];if(this.polygons=[],this.front=this.back=void 0,e instanceof Array&&0!==e.length){for(this.divider=e[0].clone(),i=0,r=e.length;i<r;i++)this.divider.splitPolygon(e[i],this.polygons,this.polygons,o,s);o.length>0&&(this.front=new t.Node(o)),s.length>0&&(this.back=new t.Node(s))}},t.Node.isConvex=function(t){var e,i;for(e=0;e<t.length;e++)for(i=0;i<t.length;i++)if(e!==i&&2!==t[e].classifySide(t[i]))return!1;return!0},t.Node.prototype.build=function(e){var i,r,o=[],s=[];for(this.divider||(this.divider=e[0].clone()),i=0,r=e.length;i<r;i++)this.divider.splitPolygon(e[i],this.polygons,this.polygons,o,s);o.length>0&&(this.front||(this.front=new t.Node),this.front.build(o)),s.length>0&&(this.back||(this.back=new t.Node),this.back.build(s))},t.Node.prototype.allPolygons=function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},t.Node.prototype.clone=function(){var e=new t.Node;return e.divider=this.divider.clone(),e.polygons=this.polygons.map(function(t){return t.clone()}),e.front=this.front&&this.front.clone(),e.back=this.back&&this.back.clone(),e},t.Node.prototype.invert=function(){var t,e,i;for(t=0,e=this.polygons.length;t<e;t++)this.polygons[t].flip();return this.divider.flip(),this.front&&this.front.invert(),this.back&&this.back.invert(),i=this.front,this.front=this.back,this.back=i,this},t.Node.prototype.clipPolygons=function(t){var e,i,r,o;if(!this.divider)return t.slice();for(r=[],o=[],e=0,i=t.length;e<i;e++)this.divider.splitPolygon(t[e],r,o,r,o);return this.front&&(r=this.front.clipPolygons(r)),o=this.back?this.back.clipPolygons(o):[],r.concat(o)},t.Node.prototype.clipTo=function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},t}();